|snake
clk => clock_divider:g1.clk50
clk => Teclado:g6.CLK
main_vsync << vga:g5.vsync
main_hsync << vga:g5.hsync
COLUM[0] => Teclado:g6.COLUMNAS[0]
COLUM[1] => Teclado:g6.COLUMNAS[1]
COLUM[2] => Teclado:g6.COLUMNAS[2]
COLUM[3] => Teclado:g6.COLUMNAS[3]
FIL[0] << Teclado:g6.FILAS[0]
FIL[1] << Teclado:g6.FILAS[1]
FIL[2] << Teclado:g6.FILAS[2]
FIL[3] << Teclado:g6.FILAS[3]
manzana_aleatoria[0] << pseudo_random_generator:g4.random[0]
manzana_aleatoria[1] << pseudo_random_generator:g4.random[1]
manzana_aleatoria[2] << pseudo_random_generator:g4.random[2]
manzana_aleatoria[3] << pseudo_random_generator:g4.random[3]
manzana_aleatoria[4] << pseudo_random_generator:g4.random[4]
manzana_aleatoria[5] << pseudo_random_generator:g4.random[5]
manzana_aleatoria[6] << pseudo_random_generator:g4.random[6]
manzana_aleatoria[7] << pseudo_random_generator:g4.random[7]
manzana_aleatoria[8] << pseudo_random_generator:g4.random[8]
manzana_aleatoria[9] << pseudo_random_generator:g4.random[9]
r[0] << vga:g5.red[0]
r[1] << vga:g5.red[1]
r[2] << vga:g5.red[2]
r[3] << vga:g5.red[3]
g[0] << vga:g5.green[0]
g[1] << vga:g5.green[1]
g[2] << vga:g5.green[2]
g[3] << vga:g5.green[3]
b[0] << vga:g5.blue[0]
b[1] << vga:g5.blue[1]
b[2] << vga:g5.blue[2]
b[3] << vga:g5.blue[3]
Dis0[0] << game_logic:g3.Display0[0]
Dis0[1] << game_logic:g3.Display0[1]
Dis0[2] << game_logic:g3.Display0[2]
Dis0[3] << game_logic:g3.Display0[3]
Dis0[4] << game_logic:g3.Display0[4]
Dis0[5] << game_logic:g3.Display0[5]
Dis0[6] << game_logic:g3.Display0[6]
Dis1[0] << game_logic:g3.Display1[0]
Dis1[1] << game_logic:g3.Display1[1]
Dis1[2] << game_logic:g3.Display1[2]
Dis1[3] << game_logic:g3.Display1[3]
Dis1[4] << game_logic:g3.Display1[4]
Dis1[5] << game_logic:g3.Display1[5]
Dis1[6] << game_logic:g3.Display1[6]


|snake|clock_divider:g1
clk50 => counter[0].CLK
clk50 => counter[1].CLK
clk50 => counter[2].CLK
clk50 => counter[3].CLK
clk50 => counter[4].CLK
clk50 => counter[5].CLK
clk50 => counter[6].CLK
clk50 => counter[7].CLK
clk50 => counter[8].CLK
clk50 => counter[9].CLK
clk50 => counter[10].CLK
clk50 => counter[11].CLK
clk50 => counter[12].CLK
clk50 => counter[13].CLK
clk50 => counter[14].CLK
clk50 => counter[15].CLK
clk50 => counter[16].CLK
clk50 => counter[17].CLK
clk50 => counter[18].CLK
clk50 => counter[19].CLK
clk50 => pulso.CLK
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => counter[16].ACLR
reset => counter[17].ACLR
reset => counter[18].ACLR
reset => counter[19].ACLR
clk25 <= pulso.DB_MAX_OUTPUT_PORT_TYPE
clkdeb <= counter[19].DB_MAX_OUTPUT_PORT_TYPE


|snake|game_logic:g3
clk => tick_time[1].CLK
clk => tick_time[2].CLK
clk => tick_time[3].CLK
clk => tick_time[4].CLK
clk => tick_time[5].CLK
clk => game_over_reset~reg0.CLK
clk => currentfood[0].CLK
clk => currentfood[1].CLK
clk => currentfood[2].CLK
clk => currentfood[3].CLK
clk => currentfood[4].CLK
clk => currentfood[5].CLK
clk => currentfood[6].CLK
clk => currentfood[7].CLK
clk => currentfood[8].CLK
clk => currentfood[9].CLK
clk => state.CLK
clk => direction_out[0].CLK
clk => direction_out[1].CLK
clk => current_direction[0].CLK
clk => current_direction[1].CLK
clk => snake[0][0].CLK
clk => snake[0][1].CLK
clk => snake[0][2].CLK
clk => snake[0][3].CLK
clk => snake[0][4].CLK
clk => snake[0][5].CLK
clk => snake[0][6].CLK
clk => snake[0][7].CLK
clk => snake[0][8].CLK
clk => snake[0][9].CLK
clk => snake[1][0].CLK
clk => snake[1][1].CLK
clk => snake[1][2].CLK
clk => snake[1][3].CLK
clk => snake[1][4].CLK
clk => snake[1][5].CLK
clk => snake[1][6].CLK
clk => snake[1][7].CLK
clk => snake[1][8].CLK
clk => snake[1][9].CLK
clk => snake[2][0].CLK
clk => snake[2][1].CLK
clk => snake[2][2].CLK
clk => snake[2][3].CLK
clk => snake[2][4].CLK
clk => snake[2][5].CLK
clk => snake[2][6].CLK
clk => snake[2][7].CLK
clk => snake[2][8].CLK
clk => snake[2][9].CLK
clk => snake[3][0].CLK
clk => snake[3][1].CLK
clk => snake[3][2].CLK
clk => snake[3][3].CLK
clk => snake[3][4].CLK
clk => snake[3][5].CLK
clk => snake[3][6].CLK
clk => snake[3][7].CLK
clk => snake[3][8].CLK
clk => snake[3][9].CLK
clk => snake[4][0].CLK
clk => snake[4][1].CLK
clk => snake[4][2].CLK
clk => snake[4][3].CLK
clk => snake[4][4].CLK
clk => snake[4][5].CLK
clk => snake[4][6].CLK
clk => snake[4][7].CLK
clk => snake[4][8].CLK
clk => snake[4][9].CLK
clk => snake[5][0].CLK
clk => snake[5][1].CLK
clk => snake[5][2].CLK
clk => snake[5][3].CLK
clk => snake[5][4].CLK
clk => snake[5][5].CLK
clk => snake[5][6].CLK
clk => snake[5][7].CLK
clk => snake[5][8].CLK
clk => snake[5][9].CLK
clk => snake[6][0].CLK
clk => snake[6][1].CLK
clk => snake[6][2].CLK
clk => snake[6][3].CLK
clk => snake[6][4].CLK
clk => snake[6][5].CLK
clk => snake[6][6].CLK
clk => snake[6][7].CLK
clk => snake[6][8].CLK
clk => snake[6][9].CLK
clk => snake[7][0].CLK
clk => snake[7][1].CLK
clk => snake[7][2].CLK
clk => snake[7][3].CLK
clk => snake[7][4].CLK
clk => snake[7][5].CLK
clk => snake[7][6].CLK
clk => snake[7][7].CLK
clk => snake[7][8].CLK
clk => snake[7][9].CLK
clk => snake[8][0].CLK
clk => snake[8][1].CLK
clk => snake[8][2].CLK
clk => snake[8][3].CLK
clk => snake[8][4].CLK
clk => snake[8][5].CLK
clk => snake[8][6].CLK
clk => snake[8][7].CLK
clk => snake[8][8].CLK
clk => snake[8][9].CLK
clk => snake[9][0].CLK
clk => snake[9][1].CLK
clk => snake[9][2].CLK
clk => snake[9][3].CLK
clk => snake[9][4].CLK
clk => snake[9][5].CLK
clk => snake[9][6].CLK
clk => snake[9][7].CLK
clk => snake[9][8].CLK
clk => snake[9][9].CLK
clk => snake[10][0].CLK
clk => snake[10][1].CLK
clk => snake[10][2].CLK
clk => snake[10][3].CLK
clk => snake[10][4].CLK
clk => snake[10][5].CLK
clk => snake[10][6].CLK
clk => snake[10][7].CLK
clk => snake[10][8].CLK
clk => snake[10][9].CLK
clk => snake[11][0].CLK
clk => snake[11][1].CLK
clk => snake[11][2].CLK
clk => snake[11][3].CLK
clk => snake[11][4].CLK
clk => snake[11][5].CLK
clk => snake[11][6].CLK
clk => snake[11][7].CLK
clk => snake[11][8].CLK
clk => snake[11][9].CLK
clk => snake[12][0].CLK
clk => snake[12][1].CLK
clk => snake[12][2].CLK
clk => snake[12][3].CLK
clk => snake[12][4].CLK
clk => snake[12][5].CLK
clk => snake[12][6].CLK
clk => snake[12][7].CLK
clk => snake[12][8].CLK
clk => snake[12][9].CLK
clk => snake[13][0].CLK
clk => snake[13][1].CLK
clk => snake[13][2].CLK
clk => snake[13][3].CLK
clk => snake[13][4].CLK
clk => snake[13][5].CLK
clk => snake[13][6].CLK
clk => snake[13][7].CLK
clk => snake[13][8].CLK
clk => snake[13][9].CLK
clk => snake[14][0].CLK
clk => snake[14][1].CLK
clk => snake[14][2].CLK
clk => snake[14][3].CLK
clk => snake[14][4].CLK
clk => snake[14][5].CLK
clk => snake[14][6].CLK
clk => snake[14][7].CLK
clk => snake[14][8].CLK
clk => snake[14][9].CLK
clk => snake[15][0].CLK
clk => snake[15][1].CLK
clk => snake[15][2].CLK
clk => snake[15][3].CLK
clk => snake[15][4].CLK
clk => snake[15][5].CLK
clk => snake[15][6].CLK
clk => snake[15][7].CLK
clk => snake[15][8].CLK
clk => snake[15][9].CLK
clk => snake[16][0].CLK
clk => snake[16][1].CLK
clk => snake[16][2].CLK
clk => snake[16][3].CLK
clk => snake[16][4].CLK
clk => snake[16][5].CLK
clk => snake[16][6].CLK
clk => snake[16][7].CLK
clk => snake[16][8].CLK
clk => snake[16][9].CLK
clk => snake[17][0].CLK
clk => snake[17][1].CLK
clk => snake[17][2].CLK
clk => snake[17][3].CLK
clk => snake[17][4].CLK
clk => snake[17][5].CLK
clk => snake[17][6].CLK
clk => snake[17][7].CLK
clk => snake[17][8].CLK
clk => snake[17][9].CLK
clk => snake[18][0].CLK
clk => snake[18][1].CLK
clk => snake[18][2].CLK
clk => snake[18][3].CLK
clk => snake[18][4].CLK
clk => snake[18][5].CLK
clk => snake[18][6].CLK
clk => snake[18][7].CLK
clk => snake[18][8].CLK
clk => snake[18][9].CLK
clk => snake[19][0].CLK
clk => snake[19][1].CLK
clk => snake[19][2].CLK
clk => snake[19][3].CLK
clk => snake[19][4].CLK
clk => snake[19][5].CLK
clk => snake[19][6].CLK
clk => snake[19][7].CLK
clk => snake[19][8].CLK
clk => snake[19][9].CLK
clk => snake_length[0].CLK
clk => snake_length[1].CLK
clk => snake_length[2].CLK
clk => snake_length[3].CLK
clk => snake_length[4].CLK
clk => next_cell[0].CLK
clk => next_cell[1].CLK
clk => next_cell[2].CLK
clk => next_cell[3].CLK
clk => next_cell[4].CLK
clk => next_cell[5].CLK
clk => next_cell[6].CLK
clk => next_cell[7].CLK
clk => next_cell[8].CLK
clk => next_cell[9].CLK
clk => \all_game:crashed.CLK
clk => tick.CLK
clk => logic_tick.CLK
clk => temp.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => temp_cell~5.DATAIN
clk => game~8.DATAIN
reset => temp_cell.snake_tail.OUTPUTSELECT
reset => temp_cell.food.OUTPUTSELECT
reset => temp_cell.space.OUTPUTSELECT
reset => temp_cell.border.OUTPUTSELECT
reset => tick_time[1].ACLR
reset => tick_time[2].ACLR
reset => tick_time[3].PRESET
reset => tick_time[4].ACLR
reset => tick_time[5].PRESET
reset => game_over_reset~reg0.ACLR
reset => currentfood[0].ACLR
reset => currentfood[1].ACLR
reset => currentfood[2].PRESET
reset => currentfood[3].ACLR
reset => currentfood[4].ACLR
reset => currentfood[5].PRESET
reset => currentfood[6].PRESET
reset => currentfood[7].ACLR
reset => currentfood[8].ACLR
reset => currentfood[9].ACLR
reset => state.ACLR
reset => direction_out[0].PRESET
reset => direction_out[1].PRESET
reset => current_direction[0].PRESET
reset => current_direction[1].PRESET
reset => snake[0][0].PRESET
reset => snake[0][1].ACLR
reset => snake[0][2].ACLR
reset => snake[0][3].ACLR
reset => snake[0][4].ACLR
reset => snake[0][5].ACLR
reset => snake[0][6].PRESET
reset => snake[0][7].ACLR
reset => snake[0][8].ACLR
reset => snake[0][9].PRESET
reset => snake[1][0].ACLR
reset => snake[1][1].PRESET
reset => snake[1][2].ACLR
reset => snake[1][3].ACLR
reset => snake[1][4].ACLR
reset => snake[1][5].ACLR
reset => snake[1][6].PRESET
reset => snake[1][7].ACLR
reset => snake[1][8].ACLR
reset => snake[1][9].PRESET
reset => snake[2][0].PRESET
reset => snake[2][1].PRESET
reset => snake[2][2].ACLR
reset => snake[2][3].ACLR
reset => snake[2][4].ACLR
reset => snake[2][5].ACLR
reset => snake[2][6].PRESET
reset => snake[2][7].ACLR
reset => snake[2][8].ACLR
reset => snake[2][9].PRESET
reset => snake[3][0].ACLR
reset => snake[3][1].ACLR
reset => snake[3][2].PRESET
reset => snake[3][3].ACLR
reset => snake[3][4].ACLR
reset => snake[3][5].ACLR
reset => snake[3][6].PRESET
reset => snake[3][7].ACLR
reset => snake[3][8].ACLR
reset => snake[3][9].PRESET
reset => snake[4][0].ACLR
reset => snake[4][1].ACLR
reset => snake[4][2].ACLR
reset => snake[4][3].ACLR
reset => snake[4][4].ACLR
reset => snake[4][5].ACLR
reset => snake[4][6].ACLR
reset => snake[4][7].ACLR
reset => snake[4][8].ACLR
reset => snake[4][9].ACLR
reset => snake[5][0].ACLR
reset => snake[5][1].ACLR
reset => snake[5][2].ACLR
reset => snake[5][3].ACLR
reset => snake[5][4].ACLR
reset => snake[5][5].ACLR
reset => snake[5][6].ACLR
reset => snake[5][7].ACLR
reset => snake[5][8].ACLR
reset => snake[5][9].ACLR
reset => snake[6][0].ACLR
reset => snake[6][1].ACLR
reset => snake[6][2].ACLR
reset => snake[6][3].ACLR
reset => snake[6][4].ACLR
reset => snake[6][5].ACLR
reset => snake[6][6].ACLR
reset => snake[6][7].ACLR
reset => snake[6][8].ACLR
reset => snake[6][9].ACLR
reset => snake[7][0].ACLR
reset => snake[7][1].ACLR
reset => snake[7][2].ACLR
reset => snake[7][3].ACLR
reset => snake[7][4].ACLR
reset => snake[7][5].ACLR
reset => snake[7][6].ACLR
reset => snake[7][7].ACLR
reset => snake[7][8].ACLR
reset => snake[7][9].ACLR
reset => snake[8][0].ACLR
reset => snake[8][1].ACLR
reset => snake[8][2].ACLR
reset => snake[8][3].ACLR
reset => snake[8][4].ACLR
reset => snake[8][5].ACLR
reset => snake[8][6].ACLR
reset => snake[8][7].ACLR
reset => snake[8][8].ACLR
reset => snake[8][9].ACLR
reset => snake[9][0].ACLR
reset => snake[9][1].ACLR
reset => snake[9][2].ACLR
reset => snake[9][3].ACLR
reset => snake[9][4].ACLR
reset => snake[9][5].ACLR
reset => snake[9][6].ACLR
reset => snake[9][7].ACLR
reset => snake[9][8].ACLR
reset => snake[9][9].ACLR
reset => snake[10][0].ACLR
reset => snake[10][1].ACLR
reset => snake[10][2].ACLR
reset => snake[10][3].ACLR
reset => snake[10][4].ACLR
reset => snake[10][5].ACLR
reset => snake[10][6].ACLR
reset => snake[10][7].ACLR
reset => snake[10][8].ACLR
reset => snake[10][9].ACLR
reset => snake[11][0].ACLR
reset => snake[11][1].ACLR
reset => snake[11][2].ACLR
reset => snake[11][3].ACLR
reset => snake[11][4].ACLR
reset => snake[11][5].ACLR
reset => snake[11][6].ACLR
reset => snake[11][7].ACLR
reset => snake[11][8].ACLR
reset => snake[11][9].ACLR
reset => snake[12][0].ACLR
reset => snake[12][1].ACLR
reset => snake[12][2].ACLR
reset => snake[12][3].ACLR
reset => snake[12][4].ACLR
reset => snake[12][5].ACLR
reset => snake[12][6].ACLR
reset => snake[12][7].ACLR
reset => snake[12][8].ACLR
reset => snake[12][9].ACLR
reset => snake[13][0].ACLR
reset => snake[13][1].ACLR
reset => snake[13][2].ACLR
reset => snake[13][3].ACLR
reset => snake[13][4].ACLR
reset => snake[13][5].ACLR
reset => snake[13][6].ACLR
reset => snake[13][7].ACLR
reset => snake[13][8].ACLR
reset => snake[13][9].ACLR
reset => snake[14][0].ACLR
reset => snake[14][1].ACLR
reset => snake[14][2].ACLR
reset => snake[14][3].ACLR
reset => snake[14][4].ACLR
reset => snake[14][5].ACLR
reset => snake[14][6].ACLR
reset => snake[14][7].ACLR
reset => snake[14][8].ACLR
reset => snake[14][9].ACLR
reset => snake[15][0].ACLR
reset => snake[15][1].ACLR
reset => snake[15][2].ACLR
reset => snake[15][3].ACLR
reset => snake[15][4].ACLR
reset => snake[15][5].ACLR
reset => snake[15][6].ACLR
reset => snake[15][7].ACLR
reset => snake[15][8].ACLR
reset => snake[15][9].ACLR
reset => snake[16][0].ACLR
reset => snake[16][1].ACLR
reset => snake[16][2].ACLR
reset => snake[16][3].ACLR
reset => snake[16][4].ACLR
reset => snake[16][5].ACLR
reset => snake[16][6].ACLR
reset => snake[16][7].ACLR
reset => snake[16][8].ACLR
reset => snake[16][9].ACLR
reset => snake[17][0].ACLR
reset => snake[17][1].ACLR
reset => snake[17][2].ACLR
reset => snake[17][3].ACLR
reset => snake[17][4].ACLR
reset => snake[17][5].ACLR
reset => snake[17][6].ACLR
reset => snake[17][7].ACLR
reset => snake[17][8].ACLR
reset => snake[17][9].ACLR
reset => snake[18][0].ACLR
reset => snake[18][1].ACLR
reset => snake[18][2].ACLR
reset => snake[18][3].ACLR
reset => snake[18][4].ACLR
reset => snake[18][5].ACLR
reset => snake[18][6].ACLR
reset => snake[18][7].ACLR
reset => snake[18][8].ACLR
reset => snake[18][9].ACLR
reset => snake[19][0].ACLR
reset => snake[19][1].ACLR
reset => snake[19][2].ACLR
reset => snake[19][3].ACLR
reset => snake[19][4].ACLR
reset => snake[19][5].ACLR
reset => snake[19][6].ACLR
reset => snake[19][7].ACLR
reset => snake[19][8].ACLR
reset => snake[19][9].ACLR
reset => snake_length[0].PRESET
reset => snake_length[1].PRESET
reset => snake_length[2].ACLR
reset => snake_length[3].ACLR
reset => snake_length[4].ACLR
reset => \all_game:crashed.ACLR
reset => logic_tick.ACLR
reset => temp.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => game~10.DATAIN
reset => tick.ENA
reset => next_cell[9].ENA
reset => next_cell[8].ENA
reset => next_cell[7].ENA
reset => next_cell[6].ENA
reset => next_cell[5].ENA
reset => next_cell[4].ENA
reset => next_cell[3].ENA
reset => next_cell[2].ENA
reset => next_cell[1].ENA
reset => next_cell[0].ENA
direction[0] => Equal3.IN2
direction[0] => direction_out.DATAA
direction[1] => Equal3.IN1
direction[1] => direction_out.DATAA
random_food[0] => Div0.IN14
random_food[0] => Mod0.IN19
random_food[1] => Div0.IN13
random_food[1] => Mod0.IN18
random_food[2] => Div0.IN12
random_food[2] => Mod0.IN17
random_food[3] => Div0.IN11
random_food[3] => Mod0.IN16
random_food[4] => Div0.IN10
random_food[4] => Mod0.IN15
random_food[5] => Div0.IN9
random_food[5] => Mod0.IN14
random_food[6] => Div0.IN8
random_food[6] => Mod0.IN13
random_food[7] => Div0.IN7
random_food[7] => Mod0.IN12
random_food[8] => Div0.IN6
random_food[8] => Mod0.IN11
random_food[9] => Div0.IN5
random_food[9] => Mod0.IN10
vsync => temp.DATAIN
vsync => tick.IN1
cell_out.border <= cell_out.border.DB_MAX_OUTPUT_PORT_TYPE
cell_out.space <= cell_out.space.DB_MAX_OUTPUT_PORT_TYPE
cell_out.food <= cell_out.food.DB_MAX_OUTPUT_PORT_TYPE
cell_out.snake_tail <= cell_out.snake_tail.DB_MAX_OUTPUT_PORT_TYPE
hor[0] => Div1.IN14
hor[0] => Equal1.IN6
hor[0] => Equal155.IN7
hor[1] => Div1.IN13
hor[1] => Equal1.IN5
hor[1] => Equal155.IN6
hor[2] => Div1.IN12
hor[2] => Equal1.IN4
hor[2] => Equal155.IN5
hor[3] => Div1.IN11
hor[3] => Equal1.IN3
hor[3] => Equal155.IN4
hor[4] => Div1.IN10
hor[4] => Equal1.IN2
hor[4] => Equal155.IN3
hor[5] => Div1.IN9
hor[5] => Equal1.IN9
hor[5] => Equal155.IN2
hor[6] => Div1.IN8
hor[6] => Equal1.IN8
hor[6] => Equal155.IN1
hor[7] => Div1.IN7
hor[7] => Equal1.IN7
hor[7] => Equal155.IN9
hor[8] => Div1.IN6
hor[8] => Equal1.IN1
hor[8] => Equal155.IN8
hor[9] => Div1.IN5
hor[9] => Equal1.IN0
hor[9] => Equal155.IN0
ver[0] => Div2.IN14
ver[0] => Equal2.IN9
ver[0] => Equal156.IN7
ver[1] => Div2.IN13
ver[1] => Equal2.IN8
ver[1] => Equal156.IN6
ver[2] => Div2.IN12
ver[2] => Equal2.IN7
ver[2] => Equal156.IN5
ver[3] => Div2.IN11
ver[3] => Equal2.IN1
ver[3] => Equal156.IN4
ver[4] => Div2.IN10
ver[4] => Equal2.IN6
ver[4] => Equal156.IN3
ver[5] => Div2.IN9
ver[5] => Equal2.IN5
ver[5] => Equal156.IN9
ver[6] => Div2.IN8
ver[6] => Equal2.IN4
ver[6] => Equal156.IN2
ver[7] => Div2.IN7
ver[7] => Equal2.IN3
ver[7] => Equal156.IN1
ver[8] => Div2.IN6
ver[8] => Equal2.IN2
ver[8] => Equal156.IN0
ver[9] => Div2.IN5
ver[9] => Equal2.IN0
ver[9] => Equal156.IN8
game_over_reset <= game_over_reset~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_game_state.ready <= current_game_state.ready.DB_MAX_OUTPUT_PORT_TYPE
current_game_state.directioncheck <= current_game_state.directioncheck.DB_MAX_OUTPUT_PORT_TYPE
current_game_state.check <= current_game_state.check.DB_MAX_OUTPUT_PORT_TYPE
current_game_state.move <= current_game_state.move.DB_MAX_OUTPUT_PORT_TYPE
current_game_state.generatefood <= current_game_state.generatefood.DB_MAX_OUTPUT_PORT_TYPE
current_game_state.game_over <= current_game_state.game_over.DB_MAX_OUTPUT_PORT_TYPE
current_game_state.vga <= current_game_state.vga.DB_MAX_OUTPUT_PORT_TYPE
Display0[0] <= Mux16.DB_MAX_OUTPUT_PORT_TYPE
Display0[1] <= Mux15.DB_MAX_OUTPUT_PORT_TYPE
Display0[2] <= Mux14.DB_MAX_OUTPUT_PORT_TYPE
Display0[3] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
Display0[4] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
Display0[5] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
Display0[6] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
Display1[0] <= Mux20.DB_MAX_OUTPUT_PORT_TYPE
Display1[1] <= <GND>
Display1[2] <= <GND>
Display1[3] <= Mux19.DB_MAX_OUTPUT_PORT_TYPE
Display1[4] <= Mux18.DB_MAX_OUTPUT_PORT_TYPE
Display1[5] <= Mux17.DB_MAX_OUTPUT_PORT_TYPE
Display1[6] <= <VCC>


|snake|debouncer_circuit:g2
debouncer_clk => rightt.CLK
debouncer_clk => down.CLK
debouncer_clk => up.CLK
debouncer_clk => leftt.CLK
debouncer_clk => temp_direction[0].CLK
debouncer_clk => temp_direction[1].CLK
debouncer_clk => dd[0].CLK
debouncer_clk => dd[1].CLK
debouncer_clk => dd[2].CLK
debouncer_clk => dd[3].CLK
debouncer_clk => du[0].CLK
debouncer_clk => du[1].CLK
debouncer_clk => du[2].CLK
debouncer_clk => du[3].CLK
debouncer_clk => dr[0].CLK
debouncer_clk => dr[1].CLK
debouncer_clk => dr[2].CLK
debouncer_clk => dr[3].CLK
debouncer_clk => dl[0].CLK
debouncer_clk => dl[1].CLK
debouncer_clk => dl[2].CLK
debouncer_clk => dl[3].CLK
reset => temp_direction[0].PRESET
reset => temp_direction[1].PRESET
reset => dd[0].ACLR
reset => dd[1].ACLR
reset => dd[2].ACLR
reset => dd[3].ACLR
reset => du[0].ACLR
reset => du[1].ACLR
reset => du[2].ACLR
reset => du[3].ACLR
reset => dr[0].ACLR
reset => dr[1].ACLR
reset => dr[2].ACLR
reset => dr[3].ACLR
reset => dl[0].ACLR
reset => dl[1].ACLR
reset => dl[2].ACLR
reset => dl[3].ACLR
reset => leftt.ENA
reset => up.ENA
reset => down.ENA
reset => rightt.ENA
p_left => dl[0].DATAIN
p_right => dr[0].DATAIN
p_up => du[0].DATAIN
p_down => dd[0].DATAIN
direction[0] <= temp_direction[0].DB_MAX_OUTPUT_PORT_TYPE
direction[1] <= temp_direction[1].DB_MAX_OUTPUT_PORT_TYPE


|snake|pseudo_random_generator:g4
clk => random[0]~reg0.CLK
clk => random[1]~reg0.CLK
clk => random[2]~reg0.CLK
clk => random[3]~reg0.CLK
clk => random[4]~reg0.CLK
clk => random[5]~reg0.CLK
clk => random[6]~reg0.CLK
clk => random[7]~reg0.CLK
clk => random[8]~reg0.CLK
clk => random[9]~reg0.CLK
clk => temp_v[0].CLK
clk => temp_v[1].CLK
clk => temp_v[2].CLK
clk => temp_v[3].CLK
clk => temp_v[4].CLK
clk => temp_v[5].CLK
clk => temp_v[6].CLK
clk => temp_v[7].CLK
clk => temp_v[8].CLK
clk => temp_v[9].CLK
cur_game.ready => ~NO_FANOUT~
cur_game.directioncheck => ~NO_FANOUT~
cur_game.check => ~NO_FANOUT~
cur_game.move => process_0.IN0
cur_game.generatefood => process_0.IN1
cur_game.game_over => ~NO_FANOUT~
cur_game.vga => ~NO_FANOUT~
random[0] <= random[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random[1] <= random[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random[2] <= random[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random[3] <= random[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random[4] <= random[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random[5] <= random[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random[6] <= random[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random[7] <= random[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random[8] <= random[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random[9] <= random[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|snake|vga:g5
reset => h.OUTPUTSELECT
reset => h.OUTPUTSELECT
reset => h.OUTPUTSELECT
reset => h.OUTPUTSELECT
reset => h.OUTPUTSELECT
reset => h.OUTPUTSELECT
reset => h.OUTPUTSELECT
reset => h.OUTPUTSELECT
reset => h.OUTPUTSELECT
reset => h.OUTPUTSELECT
reset => hsync.OUTPUTSELECT
reset => v.OUTPUTSELECT
reset => v.OUTPUTSELECT
reset => v.OUTPUTSELECT
reset => v.OUTPUTSELECT
reset => v.OUTPUTSELECT
reset => v.OUTPUTSELECT
reset => v.OUTPUTSELECT
reset => v.OUTPUTSELECT
reset => v.OUTPUTSELECT
reset => v.OUTPUTSELECT
reset => vsync.OUTPUTSELECT
reset => blue[0]~reg0.ACLR
reset => blue[1]~reg0.ACLR
reset => blue[2]~reg0.ACLR
reset => blue[3]~reg0.ACLR
reset => green[0]~reg0.ACLR
reset => green[1]~reg0.ACLR
reset => green[2]~reg0.ACLR
reset => green[3]~reg0.ACLR
reset => red[0]~reg0.ACLR
reset => red[1]~reg0.ACLR
reset => red[2]~reg0.ACLR
reset => red[3]~reg0.ACLR
vga_clk => blue[0]~reg0.CLK
vga_clk => blue[1]~reg0.CLK
vga_clk => blue[2]~reg0.CLK
vga_clk => blue[3]~reg0.CLK
vga_clk => green[0]~reg0.CLK
vga_clk => green[1]~reg0.CLK
vga_clk => green[2]~reg0.CLK
vga_clk => green[3]~reg0.CLK
vga_clk => red[0]~reg0.CLK
vga_clk => red[1]~reg0.CLK
vga_clk => red[2]~reg0.CLK
vga_clk => red[3]~reg0.CLK
vga_clk => vsync~reg0.CLK
vga_clk => v[0].CLK
vga_clk => v[1].CLK
vga_clk => v[2].CLK
vga_clk => v[3].CLK
vga_clk => v[4].CLK
vga_clk => v[5].CLK
vga_clk => v[6].CLK
vga_clk => v[7].CLK
vga_clk => v[8].CLK
vga_clk => v[9].CLK
vga_clk => hsync~reg0.CLK
vga_clk => h[0].CLK
vga_clk => h[1].CLK
vga_clk => h[2].CLK
vga_clk => h[3].CLK
vga_clk => h[4].CLK
vga_clk => h[5].CLK
vga_clk => h[6].CLK
vga_clk => h[7].CLK
vga_clk => h[8].CLK
vga_clk => h[9].CLK
board_out.border => green.IN0
board_out.border => blue.DATAA
board_out.space => green.IN1
board_out.food => red.DATAA
board_out.snake_tail => ~NO_FANOUT~
vsync <= vsync~reg0.DB_MAX_OUTPUT_PORT_TYPE
hsync <= hsync~reg0.DB_MAX_OUTPUT_PORT_TYPE
red[0] <= red[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
red[1] <= red[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
red[2] <= red[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
red[3] <= red[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
green[0] <= green[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
green[1] <= green[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
green[2] <= green[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
green[3] <= green[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue[0] <= blue[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue[1] <= blue[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue[2] <= blue[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
blue[3] <= blue[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hor[0] <= h[0].DB_MAX_OUTPUT_PORT_TYPE
hor[1] <= h[1].DB_MAX_OUTPUT_PORT_TYPE
hor[2] <= h[2].DB_MAX_OUTPUT_PORT_TYPE
hor[3] <= h[3].DB_MAX_OUTPUT_PORT_TYPE
hor[4] <= h[4].DB_MAX_OUTPUT_PORT_TYPE
hor[5] <= h[5].DB_MAX_OUTPUT_PORT_TYPE
hor[6] <= h[6].DB_MAX_OUTPUT_PORT_TYPE
hor[7] <= h[7].DB_MAX_OUTPUT_PORT_TYPE
hor[8] <= h[8].DB_MAX_OUTPUT_PORT_TYPE
hor[9] <= h[9].DB_MAX_OUTPUT_PORT_TYPE
ver[0] <= v[0].DB_MAX_OUTPUT_PORT_TYPE
ver[1] <= v[1].DB_MAX_OUTPUT_PORT_TYPE
ver[2] <= v[2].DB_MAX_OUTPUT_PORT_TYPE
ver[3] <= v[3].DB_MAX_OUTPUT_PORT_TYPE
ver[4] <= v[4].DB_MAX_OUTPUT_PORT_TYPE
ver[5] <= v[5].DB_MAX_OUTPUT_PORT_TYPE
ver[6] <= v[6].DB_MAX_OUTPUT_PORT_TYPE
ver[7] <= v[7].DB_MAX_OUTPUT_PORT_TYPE
ver[8] <= v[8].DB_MAX_OUTPUT_PORT_TYPE
ver[9] <= v[9].DB_MAX_OUTPUT_PORT_TYPE


|snake|Teclado:g6
CLK => EDO.CLK
CLK => IND~reg0.CLK
CLK => IND_S.CLK
CLK => down~reg0.CLK
CLK => up~reg0.CLK
CLK => rightt~reg0.CLK
CLK => leftt~reg0.CLK
CLK => reset~reg0.CLK
CLK => BOT_D[0].CLK
CLK => BOT_D[1].CLK
CLK => BOT_D[2].CLK
CLK => BOT_D[3].CLK
CLK => BOT_D[4].CLK
CLK => BOT_D[5].CLK
CLK => BOT_D[6].CLK
CLK => BOT_D[7].CLK
CLK => BOT_8[0].CLK
CLK => BOT_8[1].CLK
CLK => BOT_8[2].CLK
CLK => BOT_8[3].CLK
CLK => BOT_8[4].CLK
CLK => BOT_8[5].CLK
CLK => BOT_8[6].CLK
CLK => BOT_8[7].CLK
CLK => BOT_6[0].CLK
CLK => BOT_6[1].CLK
CLK => BOT_6[2].CLK
CLK => BOT_6[3].CLK
CLK => BOT_6[4].CLK
CLK => BOT_6[5].CLK
CLK => BOT_6[6].CLK
CLK => BOT_6[7].CLK
CLK => BOT_4[0].CLK
CLK => BOT_4[1].CLK
CLK => BOT_4[2].CLK
CLK => BOT_4[3].CLK
CLK => BOT_4[4].CLK
CLK => BOT_4[5].CLK
CLK => BOT_4[6].CLK
CLK => BOT_4[7].CLK
CLK => BOT_2[0].CLK
CLK => BOT_2[1].CLK
CLK => BOT_2[2].CLK
CLK => BOT_2[3].CLK
CLK => BOT_2[4].CLK
CLK => BOT_2[5].CLK
CLK => BOT_2[6].CLK
CLK => BOT_2[7].CLK
CLK => FILA[0].CLK
CLK => FILA[1].CLK
CLK => BANDERA2.CLK
CLK => CONTA_10MS[0].CLK
CLK => CONTA_10MS[1].CLK
CLK => CONTA_10MS[2].CLK
CLK => CONTA_10MS[3].CLK
CLK => CONTA_10MS[4].CLK
CLK => CONTA_10MS[5].CLK
CLK => CONTA_10MS[6].CLK
CLK => CONTA_10MS[7].CLK
CLK => CONTA_10MS[8].CLK
CLK => CONTA_10MS[9].CLK
CLK => CONTA_10MS[10].CLK
CLK => CONTA_10MS[11].CLK
CLK => CONTA_10MS[12].CLK
CLK => CONTA_10MS[13].CLK
CLK => CONTA_10MS[14].CLK
CLK => CONTA_10MS[15].CLK
CLK => BANDERA.CLK
CLK => CONTA_1MS[0].CLK
CLK => CONTA_1MS[1].CLK
CLK => CONTA_1MS[2].CLK
CLK => CONTA_1MS[3].CLK
CLK => CONTA_1MS[4].CLK
CLK => CONTA_1MS[5].CLK
CLK => CONTA_1MS[6].CLK
CLK => CONTA_1MS[7].CLK
CLK => CONTA_1MS[8].CLK
CLK => CONTA_1MS[9].CLK
CLK => CONTA_1MS[10].CLK
CLK => CONTA_1MS[11].CLK
CLK => CONTA_1MS[12].CLK
COLUMNAS[0] => BOT_D.DATAB
COLUMNAS[1] => BOT_6.DATAB
COLUMNAS[2] => BOT_2.DATAB
COLUMNAS[2] => BOT_8.DATAB
COLUMNAS[3] => BOT_4.DATAB
FILAS[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
FILAS[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
FILAS[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
FILAS[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
reset <= reset~reg0.DB_MAX_OUTPUT_PORT_TYPE
leftt <= leftt~reg0.DB_MAX_OUTPUT_PORT_TYPE
rightt <= rightt~reg0.DB_MAX_OUTPUT_PORT_TYPE
up <= up~reg0.DB_MAX_OUTPUT_PORT_TYPE
down <= down~reg0.DB_MAX_OUTPUT_PORT_TYPE
IND <= IND~reg0.DB_MAX_OUTPUT_PORT_TYPE


